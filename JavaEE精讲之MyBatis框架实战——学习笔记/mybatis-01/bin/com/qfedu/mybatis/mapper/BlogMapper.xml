<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qfedu.mybatis.mapper.BlogMapper">
	<cache />
	<resultMap type="Blog" id="blogResultMap">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="author_id" property="authorId" jdbcType="INTEGER" />
	</resultMap>
	
	<!-- sql片段 -->
	<sql id="columnBase">
		  `id`,
		  `title`,
		  `author_id` as authorId,
		  `state`,
		  `featured`,
		  `style` 
	</sql>
	
	<!--*************** CRUD ***************-->
	
	<!-- statement -->
	<select id="selectBlog" parameterType="int" resultType="Blog">
		select 
		  <include refid="columnBase"></include>
		from Blog where id = #{id}
	</select>
	
	<select id="selectBlog2" parameterType="int" resultMap="blogResultMap">
		select *
		from Blog where id = #{id}
	</select>
	
	<select id="selectBlogByTitle" parameterType="string" resultMap="blogResultMap">
		select * from blog where title like #{title}
	</select>
	
	<select id="selectBlogByTitle2" parameterType="string" resultMap="blogResultMap">
		select * from blog where lower(title) like lower('%${value}%')
	</select>
	
	<select id="selectBlogBySort" parameterType="string" resultMap="blogResultMap">
		select * from blog order by CONVERT(${value} USING gbk)
		<!-- select * from blog order by ${value} -->
	</select>
	
	<select id="selectBlogByPage" resultMap="blogResultMap">
		select * from blog limit #{0}, #{1}
	</select>
	
	<select id="selectBlogByPage2" resultMap="blogResultMap">
		select * from blog limit #{offset}, #{pagesize}
	</select>
	
	<select id="selectBlogByPage3" resultMap="blogResultMap">
		select * from blog limit #{offset}, #{pagesize}
	</select>
	
	
	<insert id="insertBlog" parameterType="Blog" useGeneratedKeys="true" keyProperty="id">
		INSERT INTO `blog` (
		  `title`,
		  `author_id`,
		  `state`,
		  `featured`,
		  `style`
		) 
		VALUES
		  (
		    #{title},
		    #{authorId},
		    #{state},
		    #{featured},
		    #{style}
		  )
	</insert>
	
	<insert id="insertBlogOracle" parameterType="Blog">
		<selectKey resultType="java.lang.Integer" order="BEFORE" keyProperty="id">
			select seq.nextval as id from dual
		</selectKey>
		INSERT INTO `blog` (
		  `title`,
		  `author_id`,
		  `state`,
		  `featured`,
		  `style`
		) 
		VALUES
		  (
		    #{title},
		    #{authorId},
		    #{state},
		    #{featured},
		    #{style}
		  )	
	</insert>
	
	<insert id="insertBlogMysql" parameterType="Blog">
		<selectKey resultType="java.lang.Integer" order="AFTER" keyProperty="id">
			SELECT LAST_INSERT_ID()
		</selectKey>
		INSERT INTO `blog` (
		  `title`,
		  `author_id`,
		  `state`,
		  `featured`,
		  `style`
		) 
		VALUES
		  (
		    #{title},
		    #{authorId},
		    #{state},
		    #{featured},
		    #{style}
		  )	
	</insert>
	
	<update id="upadteBlog" parameterType="Blog">
		UPDATE 
		  `blog` 
		SET
		  `title` = #{title},
		  `author_id` = #{authorId},
		  `state` = #{state},
		  `featured` = #{featured},
		  `style` = #{style} 
		WHERE `id` = #{id}
	</update> 

	<delete id="deleteBlogById" parameterType="int">
		delete from blog where id = #{id}
	</delete>
	
	
	<!--*************** 动态sql ***************-->
	<select id="selectActiveBlogByTitle"  parameterType="Blog" resultMap="blogResultMap">
		SELECT * FROM blog 
		WHERE state = 'ACTIVE'
		<!-- <if test="title != ''">
			AND title LIKE '%${title}%'
		</if> -->
		<if test="title != null and title != ''">
			AND title LIKE #{title}
		</if>
	</select>
	
	<select id="selectActiveBlogByTitleOrStyle" parameterType="Blog" resultMap="blogResultMap">
		select * from blog 
		WHERE state = 'ACTIVE'
		<choose>
			<when test="title != null and title != ''">
				and lower(title) like lower(#{title})
			</when>
			<when test="style != null and style != ''">
				and style = #{style}
			</when>
			<otherwise>
				and featured = true
			</otherwise>
		</choose>
	</select>
	
	<select id="selectBlogByCondition" parameterType="Blog" resultMap="blogResultMap">
		select * from blog 
		<where>
			<if test="state != null and state != ''">
				state = #{state}
			</if>
			<if test="title != null and title != ''">
				and lower(title) like lower(#{title})
			</if>
			<if test="featured != null">
				and featured = #{featured}
			</if>
		</where>
	</select>
	
	<update id="upadteBlogByCondition" parameterType="Blog">
		UPDATE 
		  `blog` 
		<set>
		  <if test="title != null">`title` = #{title},</if>
		  <if test="authorId != null">`author_id` = #{authorId},</if>
		  <if test="state != null">`state` = #{state},</if>
		  <if test="featured != null">`featured` = #{featured},</if>
		  <if test="style != null">`style` = #{style} </if>
		</set>
		WHERE `id` = #{id}
	</update> 
	
	
	<select id="selectBlogByConditionTrim" parameterType="Blog" resultMap="blogResultMap">
		select * from blog 
		<trim prefix="where" prefixOverrides="and | or">
			<if test="state != null and state != ''">
				state = #{state}
			</if>
			<if test="title != null and title != ''">
				and lower(title) like lower(#{title})
			</if>
			<if test="featured != null">
				and featured = #{featured}
			</if>
		</trim>
	</select>
	
	<update id="upadteBlogByConditionTrim" parameterType="Blog">
		UPDATE 
		  `blog` 
		<trim prefix="set" suffixOverrides=",">
		  <if test="title != null">`title` = #{title},</if>
		  <if test="authorId != null">`author_id` = #{authorId},</if>
		  <if test="state != null">`state` = #{state},</if>
		  <if test="featured != null">`featured` = #{featured},</if>
		  <if test="style != null">`style` = #{style} </if>
		</trim>
		WHERE `id` = #{id}
	</update> 
	
	<delete id="deleteBlogList" parameterType="list">
		delete from blog where id in
		<foreach collection="list" item="item" open="(" close=")" separator=",">
			#{item}
		</foreach>
	</delete>
	
</mapper>


